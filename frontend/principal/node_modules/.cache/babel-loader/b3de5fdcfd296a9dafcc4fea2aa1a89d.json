{"ast":null,"code":"import { FETCH_ALL_USERS } from \"../../common/redux/RATypes\";\nimport RestAPI from \"../../common/RestAPI\";\nimport Notifications from \"../../common/ui/connected/Notifications/Notifications\";\nimport CommonActions from \"../../common/redux/CommonActions\";\n\nvar fetchAllUsers = function fetchAllUsers() {\n  return CommonActions.baseAsyncThunk(RestAPI.user.fetchAllUsers(), FETCH_ALL_USERS, function (res, hasError) {\n    if (hasError && res.response) {\n      Notifications.addNotification(res.response.body.messages);\n      return res.response.body;\n    } else if (res && res.body && res.body.messages) {\n      Notifications.addNotification(res.body.messages);\n      return res.body.data;\n    }\n  });\n};\n\nexport default {\n  fetchAllUsers: fetchAllUsers\n};","map":{"version":3,"sources":["/Users/brunogomes/desafio/frontend/principal/src/views/crud/CrudActions.js"],"names":["FETCH_ALL_USERS","RestAPI","Notifications","CommonActions","fetchAllUsers","baseAsyncThunk","user","res","hasError","response","addNotification","body","messages","data"],"mappings":"AAAA,SAASA,eAAT,QAAgC,4BAAhC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,aAAP,MAA0B,uDAA1B;AACA,OAAOC,aAAP,MAA0B,kCAA1B;;AAEA,IAAIC,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SAAMD,aAAa,CAACE,cAAd,CACzBJ,OAAO,CAACK,IAAR,CAAaF,aAAb,EADyB,EAEzBJ,eAFyB,EAGzB,UAACO,GAAD,EAAMC,QAAN,EAAmB;AAGlB,QAAIA,QAAQ,IAAID,GAAG,CAACE,QAApB,EAA8B;AAC7BP,MAAAA,aAAa,CAACQ,eAAd,CAA8BH,GAAG,CAACE,QAAJ,CAAaE,IAAb,CAAkBC,QAAhD;AAEA,aAAOL,GAAG,CAACE,QAAJ,CAAaE,IAApB;AACA,KAJD,MAIO,IAAIJ,GAAG,IAAIA,GAAG,CAACI,IAAX,IAAmBJ,GAAG,CAACI,IAAJ,CAASC,QAAhC,EAA0C;AAChDV,MAAAA,aAAa,CAACQ,eAAd,CAA8BH,GAAG,CAACI,IAAJ,CAASC,QAAvC;AACA,aAAOL,GAAG,CAACI,IAAJ,CAASE,IAAhB;AACA;AACD,GAdwB,CAAN;AAAA,CAApB;;AAiBA,eAAe;AACdT,EAAAA,aAAa,EAAbA;AADc,CAAf","sourcesContent":["import { FETCH_ALL_USERS } from \"../../common/redux/RATypes\";\nimport RestAPI from \"../../common/RestAPI\";\nimport Notifications from \"../../common/ui/connected/Notifications/Notifications\";\nimport CommonActions from \"../../common/redux/CommonActions\";\n\nlet fetchAllUsers = () => CommonActions.baseAsyncThunk(\n\tRestAPI.user.fetchAllUsers(),\n\tFETCH_ALL_USERS,\n\t(res, hasError) => {\n\n\n\t\tif (hasError && res.response) {\n\t\t\tNotifications.addNotification(res.response.body.messages);\n\n\t\t\treturn res.response.body;\n\t\t} else if (res && res.body && res.body.messages) {\n\t\t\tNotifications.addNotification(res.body.messages);\n\t\t\treturn res.body.data;\n\t\t}\n\t});\n\n\nexport default {\n\tfetchAllUsers\n};"]},"metadata":{},"sourceType":"module"}