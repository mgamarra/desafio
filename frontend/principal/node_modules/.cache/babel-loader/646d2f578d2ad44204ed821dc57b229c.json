{"ast":null,"code":"import _ from \"underscore\";\n/**\n * Checa as roles de um usuario logado\n * @param userRoles\n * @param requiredRoles\n * @param matchMode\n * @returns {boolean}\n */\n\nexport default {\n  isAuthorized: function isAuthorized(userRoles, requiredRoles, matchMode) {\n    if (!requiredRoles || !userRoles || !matchMode) throw new Error(\"AppUtils: requiredRoles, matchMode={'all', 'any'} and userRoles properties are required.\");\n    requiredRoles = Array.isArray(requiredRoles) ? requiredRoles : [requiredRoles];\n    var intersectionRoles = requiredRoles && userRoles && userRoles.length > 0 ? _.intersection(userRoles, requiredRoles) : [];\n\n    if (requiredRoles.indexOf(\"*\") !== -1 || (matchMode === \"any\" ? intersectionRoles.length > 0 : intersectionRoles.length === requiredRoles.length)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n};","map":{"version":3,"sources":["/Users/brunogomes/desafio/frontend/principal/src/common/AppUtils.js"],"names":["_","isAuthorized","userRoles","requiredRoles","matchMode","Error","Array","isArray","intersectionRoles","length","intersection","indexOf"],"mappings":"AAAA,OAAOA,CAAP,MAAc,YAAd;AAEA;;;;;;;;AAQA,eAAe;AACdC,EAAAA,YAAY,EAAE,sBAACC,SAAD,EAAYC,aAAZ,EAA2BC,SAA3B,EAAyC;AACtD,QAAI,CAACD,aAAD,IAAkB,CAACD,SAAnB,IAAgC,CAACE,SAArC,EACC,MAAM,IAAIC,KAAJ,CAAU,0FAAV,CAAN;AAEDF,IAAAA,aAAa,GAAGG,KAAK,CAACC,OAAN,CAAcJ,aAAd,IAA+BA,aAA/B,GAA+C,CAACA,aAAD,CAA/D;AACA,QAAMK,iBAAiB,GAAGL,aAAa,IAAID,SAAjB,IAA8BA,SAAS,CAACO,MAAV,GAAmB,CAAjD,GAAqDT,CAAC,CAACU,YAAF,CAAeR,SAAf,EAA0BC,aAA1B,CAArD,GAAgG,EAA1H;;AAEA,QAAIA,aAAa,CAACQ,OAAd,CAAsB,GAAtB,MAA+B,CAAC,CAAhC,KACCP,SAAS,KAAK,KAAd,GACDI,iBAAiB,CAACC,MAAlB,GAA2B,CAD1B,GAEDD,iBAAiB,CAACC,MAAlB,KAA6BN,aAAa,CAACM,MAH3C,CAAJ,EAGwD;AACvD,aAAO,IAAP;AACA,KALD,MAKO;AACN,aAAO,KAAP;AACA;AACD;AAhBa,CAAf","sourcesContent":["import _ from \"underscore\";\n\n/**\n * Checa as roles de um usuario logado\n * @param userRoles\n * @param requiredRoles\n * @param matchMode\n * @returns {boolean}\n */\n\nexport default {\n\tisAuthorized: (userRoles, requiredRoles, matchMode) => {\n\t\tif (!requiredRoles || !userRoles || !matchMode)\n\t\t\tthrow new Error(\"AppUtils: requiredRoles, matchMode={'all', 'any'} and userRoles properties are required.\");\n\n\t\trequiredRoles = Array.isArray(requiredRoles) ? requiredRoles : [requiredRoles];\n\t\tconst intersectionRoles = requiredRoles && userRoles && userRoles.length > 0 ? _.intersection(userRoles, requiredRoles) : [];\n\n\t\tif (requiredRoles.indexOf(\"*\") !== -1\n\t\t\t|| (matchMode === \"any\"\n\t\t\t\t? intersectionRoles.length > 0\n\t\t\t\t: intersectionRoles.length === requiredRoles.length)) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t},\n}\n"]},"metadata":{},"sourceType":"module"}