{"ast":null,"code":"import { FETCH_ALL_USERS } from \"../../common/redux/RATypes\";\nimport RestAPI from \"../../common/RestAPI\";\nimport CommonActions from \"../../common/redux/CommonActions\"; // let fetchlAllUsers = () => CommonActions.baseAsyncThunk(\n//     RestAPI.user.fetchAll(),\n//     FETCH_ALL_USERS,\n//     (res, body, hasError) => {\n//         let messages = [];\n//         let data = null;\n//         if (hasError && body) {\n//             messages = body.messages;\n//         } else if (body && body.messages) {\n//             messages = body.messages;\n//             data = body.data;\n//         }\n//         return data;\n//     }\n// );\n\nvar fetchlAllUsers = function fetchlAllUsers() {\n  return CommonActions.baseAsyncThunk(RestAPI.user.fetchAll(), FETCH_ALL_USERS, function (res, hasError) {\n    if (hasError && res.response) {\n      Notifications.addNotification(res.response.body.messages);\n      return res.response.body;\n    } else if (res && res.body && res.body.messages) {\n      Notifications.addNotification(res.body.messages);\n      messages = body.messages;\n      data = body.data;\n    }\n  });\n};\n\nexport default {\n  fetchlAllUsers: fetchlAllUsers\n};","map":{"version":3,"sources":["/Users/brunogomes/desafio/frontend/principal/src/views/crud/CrudActions.js"],"names":["FETCH_ALL_USERS","RestAPI","CommonActions","fetchlAllUsers","baseAsyncThunk","user","fetchAll","res","hasError","response","Notifications","addNotification","body","messages","data"],"mappings":"AAAA,SAASA,eAAT,QAAgC,4BAAhC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,aAAP,MAA0B,kCAA1B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,IAAIC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAMD,aAAa,CAACE,cAAd,CAC1BH,OAAO,CAACI,IAAR,CAAaC,QAAb,EAD0B,EAE1BN,eAF0B,EAG1B,UAACO,GAAD,EAAMC,QAAN,EAAmB;AAClB,QAAIA,QAAQ,IAAID,GAAG,CAACE,QAApB,EAA8B;AAC7BC,MAAAA,aAAa,CAACC,eAAd,CAA8BJ,GAAG,CAACE,QAAJ,CAAaG,IAAb,CAAkBC,QAAhD;AAEA,aAAON,GAAG,CAACE,QAAJ,CAAaG,IAApB;AACA,KAJD,MAIO,IAAIL,GAAG,IAAIA,GAAG,CAACK,IAAX,IAAmBL,GAAG,CAACK,IAAJ,CAASC,QAAhC,EAA0C;AAChDH,MAAAA,aAAa,CAACC,eAAd,CAA8BJ,GAAG,CAACK,IAAJ,CAASC,QAAvC;AACSA,MAAAA,QAAQ,GAAGD,IAAI,CAACC,QAAhB;AACAC,MAAAA,IAAI,GAAGF,IAAI,CAACE,IAAZ;AACT;AACD,GAbyB,CAAN;AAAA,CAArB;;AAeA,eAAe;AACdX,EAAAA,cAAc,EAAdA;AADc,CAAf","sourcesContent":["import { FETCH_ALL_USERS } from \"../../common/redux/RATypes\";\nimport RestAPI from \"../../common/RestAPI\";\nimport CommonActions from \"../../common/redux/CommonActions\";\n\n// let fetchlAllUsers = () => CommonActions.baseAsyncThunk(\n//     RestAPI.user.fetchAll(),\n//     FETCH_ALL_USERS,\n//     (res, body, hasError) => {\n//         let messages = [];\n//         let data = null;\n//         if (hasError && body) {\n//             messages = body.messages;\n//         } else if (body && body.messages) {\n//             messages = body.messages;\n//             data = body.data;\n//         }\n\n//         return data;\n//     }\n// );\n\nlet fetchlAllUsers = () => CommonActions.baseAsyncThunk(\n\tRestAPI.user.fetchAll(),\n\tFETCH_ALL_USERS,\n\t(res, hasError) => {\n\t\tif (hasError && res.response) {\n\t\t\tNotifications.addNotification(res.response.body.messages);\n\n\t\t\treturn res.response.body;\n\t\t} else if (res && res.body && res.body.messages) {\n\t\t\tNotifications.addNotification(res.body.messages);\n            messages = body.messages;\n            data = body.data;\n\t\t}\n\t});\n\nexport default {\n\tfetchlAllUsers\n};"]},"metadata":{},"sourceType":"module"}