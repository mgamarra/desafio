{"ast":null,"code":"import SuperagentBackend from \"./superagent/SuperagentBackend\";\nvar auth = {\n  login: function login(loginData) {\n    return SuperagentBackend.post('/auth/login', loginData).timeout({\n      response: 50000\n    });\n  }\n};\nvar user = {\n  fetchAllUsers: function fetchAllUsers() {\n    return SuperagentBackend.get('/users');\n  },\n  save: function save(data) {\n    return SuperagentBackend.post('/users/save', data);\n  }\n};\nvar addresses = {\n  fetchAddressByZipcode: function fetchAddressByZipcode(zipcode) {\n    return SuperagentBackend.get('/addresses?zipcode=' + zipcode);\n  }\n};\nexport default {\n  auth: auth,\n  user: user,\n  addresses: addresses\n};","map":{"version":3,"sources":["/Users/brunogomes/desafio/frontend/principal/src/common/RestAPI.js"],"names":["SuperagentBackend","auth","login","loginData","post","timeout","response","user","fetchAllUsers","get","save","data","addresses","fetchAddressByZipcode","zipcode"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,gCAA9B;AAEA,IAAMC,IAAI,GAAG;AACZC,EAAAA,KAAK,EAAE,eAACC,SAAD;AAAA,WAAeH,iBAAiB,CAACI,IAAlB,CAAuB,aAAvB,EAAsCD,SAAtC,EAAiDE,OAAjD,CAAyD;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAAzD,CAAf;AAAA;AADK,CAAb;AAIA,IAAMC,IAAI,GAAG;AACZC,EAAAA,aAAa,EAAE;AAAA,WAAMR,iBAAiB,CAACS,GAAlB,CAAsB,QAAtB,CAAN;AAAA,GADH;AAEZC,EAAAA,IAAI,EAAE,cAACC,IAAD;AAAA,WAAUX,iBAAiB,CAACI,IAAlB,CAAuB,aAAvB,EAAsCO,IAAtC,CAAV;AAAA;AAFM,CAAb;AAKA,IAAMC,SAAS,GAAG;AACjBC,EAAAA,qBAAqB,EAAE,+BAACC,OAAD;AAAA,WAAad,iBAAiB,CAACS,GAAlB,CAAsB,wBAAwBK,OAA9C,CAAb;AAAA;AADN,CAAlB;AAIA,eAAe;AACdb,EAAAA,IAAI,EAAJA,IADc;AAEdM,EAAAA,IAAI,EAAJA,IAFc;AAGdK,EAAAA,SAAS,EAATA;AAHc,CAAf","sourcesContent":["import SuperagentBackend from \"./superagent/SuperagentBackend\";\n\nconst auth = {\n\tlogin: (loginData) => SuperagentBackend.post('/auth/login', loginData).timeout({response: 50000}),\n};\n\nconst user = {\n\tfetchAllUsers: () => SuperagentBackend.get('/users'),\n\tsave: (data) => SuperagentBackend.post('/users/save', data),\n};\n\nconst addresses = {\n\tfetchAddressByZipcode: (zipcode) => SuperagentBackend.get('/addresses?zipcode=' + zipcode),\n};\n\nexport default {\n\tauth,\n\tuser,\n\taddresses,\n};\n\n\n"]},"metadata":{},"sourceType":"module"}