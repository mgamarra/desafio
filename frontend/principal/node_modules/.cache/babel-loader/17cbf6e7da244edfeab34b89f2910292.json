{"ast":null,"code":"import { FETCH_ALL_USERS } from \"../../common/redux/RATypes\";\nimport RestAPI from \"../../common/RestAPI\";\nimport CommonActions from \"../../common/redux/CommonActions\";\nimport Notifications from \"../../common/ui/connected/Notifications/Notifications\"; // let fetchlAllUsers = () => CommonActions.baseAsyncThunk(\n//     RestAPI.user.fetchAll(),\n//     FETCH_ALL_USERS,\n//     (res, body, hasError) => {\n//         let messages = [];\n//         let data = null;\n//         if (hasError && body) {\n//             messages = body.messages;\n//         } else if (body && body.messages) {\n//             messages = body.messages;\n//             data = body.data;\n//         }\n//         return data;\n//     }\n// );\n\nvar fetchlAllUsers = function fetchlAllUsers() {\n  return CommonActions.baseAsyncThunk(RestAPI.user.fetchAllUsers(), FETCH_ALL_USERS, function (res, hasError) {\n    var messages = [];\n    var data = null;\n\n    if (hasError && res.response) {\n      Notifications.addNotification(res.response.body.messages);\n      return res.response.body;\n    } else if (res && res.body && res.body.messages) {\n      Notifications.addNotification(res.body.messages);\n      messages = res.body.messages;\n      data = res.body.data;\n    }\n\n    return data;\n  });\n};\n\nexport default {\n  fetchAllUsers: fetchAllUsers\n};","map":{"version":3,"sources":["/Users/brunogomes/desafio/frontend/principal/src/views/crud/CrudActions.js"],"names":["FETCH_ALL_USERS","RestAPI","CommonActions","Notifications","fetchlAllUsers","baseAsyncThunk","user","fetchAllUsers","res","hasError","messages","data","response","addNotification","body"],"mappings":"AAAA,SAASA,eAAT,QAAgC,4BAAhC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,aAAP,MAA0B,uDAA1B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,IAAIC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAMF,aAAa,CAACG,cAAd,CAC1BJ,OAAO,CAACK,IAAR,CAAaC,aAAb,EAD0B,EAE1BP,eAF0B,EAG1B,UAACQ,GAAD,EAAMC,QAAN,EAAmB;AACZ,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIC,IAAI,GAAG,IAAX;;AACN,QAAIF,QAAQ,IAAID,GAAG,CAACI,QAApB,EAA8B;AAC7BT,MAAAA,aAAa,CAACU,eAAd,CAA8BL,GAAG,CAACI,QAAJ,CAAaE,IAAb,CAAkBJ,QAAhD;AAEA,aAAOF,GAAG,CAACI,QAAJ,CAAaE,IAApB;AACA,KAJD,MAIO,IAAIN,GAAG,IAAIA,GAAG,CAACM,IAAX,IAAmBN,GAAG,CAACM,IAAJ,CAASJ,QAAhC,EAA0C;AAChDP,MAAAA,aAAa,CAACU,eAAd,CAA8BL,GAAG,CAACM,IAAJ,CAASJ,QAAvC;AACSA,MAAAA,QAAQ,GAAGF,GAAG,CAACM,IAAJ,CAASJ,QAApB;AACAC,MAAAA,IAAI,GAAGH,GAAG,CAACM,IAAJ,CAASH,IAAhB;AAEH;;AAED,WAAOA,IAAP;AACN,GAlByB,CAAN;AAAA,CAArB;;AAoBA,eAAe;AACdJ,EAAAA,aAAa,EAAbA;AADc,CAAf","sourcesContent":["import { FETCH_ALL_USERS } from \"../../common/redux/RATypes\";\nimport RestAPI from \"../../common/RestAPI\";\nimport CommonActions from \"../../common/redux/CommonActions\";\nimport Notifications from \"../../common/ui/connected/Notifications/Notifications\";\n\n// let fetchlAllUsers = () => CommonActions.baseAsyncThunk(\n//     RestAPI.user.fetchAll(),\n//     FETCH_ALL_USERS,\n//     (res, body, hasError) => {\n//         let messages = [];\n//         let data = null;\n//         if (hasError && body) {\n//             messages = body.messages;\n//         } else if (body && body.messages) {\n//             messages = body.messages;\n//             data = body.data;\n//         }\n\n//         return data;\n//     }\n// );\n\nlet fetchlAllUsers = () => CommonActions.baseAsyncThunk(\n\tRestAPI.user.fetchAllUsers(),\n\tFETCH_ALL_USERS,\n\t(res, hasError) => {\n        let messages = [];\n        let data = null;\n\t\tif (hasError && res.response) {\n\t\t\tNotifications.addNotification(res.response.body.messages);\n\n\t\t\treturn res.response.body;\n\t\t} else if (res && res.body && res.body.messages) {\n\t\t\tNotifications.addNotification(res.body.messages);\n            messages = res.body.messages;\n            data = res.body.data;\n           \n        }\n        \n        return data;\n\t});\n\nexport default {\n\tfetchAllUsers\n};"]},"metadata":{},"sourceType":"module"}