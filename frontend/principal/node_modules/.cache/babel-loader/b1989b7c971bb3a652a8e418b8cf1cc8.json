{"ast":null,"code":"import _objectWithoutProperties from \"/Users/brunogomes/desafio/frontend/principal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/brunogomes/desafio/frontend/principal/src/common/router/SecureRoute.js\";\n\nimport React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport AppUtils from \"../AppUtils\";\nimport PropTypes from \"prop-types\";\nimport Constants from \"../Constants\";\nimport ReduxStore from \"../redux/ReduxStore\";\n/**\n * Wrapper que garante a segurança de uma rota segura\n *\n * @param component: Componente de destino que será renderizado\n * @param requiredRoles: As roles que a rota precisa para ser acessada. Pode ser apenas uma role ou um array de roles, ou * para qualquer role.\n * @param matchMode: [any: Se o usuário tiver qualquer uma ou mais roles requeridas, autoriza. all: O usuário precisa ter todas as roles requeridas para authorizar]\n * @param rest: Demais parametros a serem repassados aos filhos\n * @returns O famigerado componente.\n */\n\nvar SecureRoute = function SecureRoute(_ref) {\n  var Component = _ref.component,\n      _ref$requiredRoles = _ref.requiredRoles,\n      requiredRoles = _ref$requiredRoles === void 0 ? [\"*\"] : _ref$requiredRoles,\n      _ref$matchMode = _ref.matchMode,\n      matchMode = _ref$matchMode === void 0 ? \"any\" : _ref$matchMode,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"requiredRoles\", \"matchMode\"]);\n\n  var RouteToRender;\n  console.debug(\"> Creating SecureRoute\", [rest, Component, typeof Component]);\n  if (!Component) throw Error(\"Missing 'component' property\");else if (!ReduxStore.getState().auth.loggedIn) RouteToRender = function RouteToRender() {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: Constants.ROUTES.LOGIN,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }\n    });\n  };else if (!AppUtils.isAuthorized(ReduxStore.getState().auth.roles, requiredRoles, matchMode) && !rest.location.pathname.safeContains(\"/401\")) RouteToRender = function RouteToRender() {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: Constants.ROUTES.UNAUTHORIZED,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }\n    });\n  };else {\n    RouteToRender = function RouteToRender() {\n      return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n        component: function component(props) {\n          return /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 64\n            }\n          }));\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }\n      }));\n    };\n  }\n  return /*#__PURE__*/React.createElement(RouteToRender, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  });\n};\n\nSecureRoute.propTypes = {\n  component: PropTypes.oneOfType([PropTypes.func]).isRequired\n};\nSecureRoute.defaultProps = {\n  exact: true\n};\nSecureRoute.propTypes = {\n  component: PropTypes.oneOfType([PropTypes.any]).isRequired,\n  componentParams: PropTypes.oneOfType([PropTypes.object]),\n  isLoggedIn: PropTypes.oneOfType([PropTypes.bool]).isRequired,\n  matchMode: PropTypes.oneOfType([PropTypes.string]),\n  pathname: PropTypes.oneOfType([PropTypes.string]),\n  userGroup: PropTypes.oneOfType([PropTypes.string])\n};\nSecureRoute.defaultProps = {\n  exact: true\n};\nexport default SecureRoute;","map":{"version":3,"sources":["/Users/brunogomes/desafio/frontend/principal/src/common/router/SecureRoute.js"],"names":["React","Redirect","Route","AppUtils","PropTypes","Constants","ReduxStore","SecureRoute","Component","component","requiredRoles","matchMode","rest","RouteToRender","console","debug","Error","getState","auth","loggedIn","ROUTES","LOGIN","isAuthorized","roles","location","pathname","safeContains","UNAUTHORIZED","props","propTypes","oneOfType","func","isRequired","defaultProps","exact","any","componentParams","object","isLoggedIn","bool","string","userGroup"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Redirect, Route} from \"react-router-dom\";\nimport AppUtils from \"../AppUtils\";\nimport PropTypes from \"prop-types\";\nimport Constants from \"../Constants\";\nimport ReduxStore from \"../redux/ReduxStore\";\n\n/**\n * Wrapper que garante a segurança de uma rota segura\n *\n * @param component: Componente de destino que será renderizado\n * @param requiredRoles: As roles que a rota precisa para ser acessada. Pode ser apenas uma role ou um array de roles, ou * para qualquer role.\n * @param matchMode: [any: Se o usuário tiver qualquer uma ou mais roles requeridas, autoriza. all: O usuário precisa ter todas as roles requeridas para authorizar]\n * @param rest: Demais parametros a serem repassados aos filhos\n * @returns O famigerado componente.\n */\nconst SecureRoute = ({component: Component, requiredRoles = [\"*\"], matchMode = \"any\", ...rest}) => {\n\tlet RouteToRender;\n\tconsole.debug(\"> Creating SecureRoute\", [rest, Component, typeof Component]);\n\n\tif (!Component)\n\t\tthrow Error(\"Missing 'component' property\");\n\n\telse if (!ReduxStore.getState().auth.loggedIn)\n\t\tRouteToRender = () => <Redirect to={Constants.ROUTES.LOGIN}/>;\n\n\telse if (!AppUtils.isAuthorized(ReduxStore.getState().auth.roles, requiredRoles, matchMode) && !rest.location.pathname.safeContains(\"/401\"))\n\t\tRouteToRender = () => <Redirect to={Constants.ROUTES.UNAUTHORIZED}/>;\n\n\telse {\n\t\tRouteToRender = () => <Route {...rest} component={(props) => <Component {...props}/>}/>\n\t}\n\n\treturn <RouteToRender/>;\n};\n\nSecureRoute.propTypes = {\n\tcomponent: PropTypes.oneOfType([PropTypes.func]).isRequired,\n};\n\nSecureRoute.defaultProps = {\n\texact: true\n};\n\nSecureRoute.propTypes = {\n\tcomponent: PropTypes.oneOfType([PropTypes.any]).isRequired,\n\tcomponentParams: PropTypes.oneOfType([PropTypes.object]),\n\tisLoggedIn: PropTypes.oneOfType([PropTypes.bool]).isRequired,\n\tmatchMode: PropTypes.oneOfType([PropTypes.string]),\n\tpathname: PropTypes.oneOfType([PropTypes.string]),\n\tuserGroup: PropTypes.oneOfType([PropTypes.string]),\n};\n\nSecureRoute.defaultProps = {\n\texact: true\n};\n\nexport default SecureRoute;"]},"metadata":{},"sourceType":"module"}